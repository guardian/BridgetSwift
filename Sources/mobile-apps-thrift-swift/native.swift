/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import Foundation

import Thrift


public final class AdSlot {

  public var x: Int32

  public var y: Int32

  public var height: Int32?

  public var width: Int32?


  public init(x: Int32, y: Int32) {
    self.x = x
    self.y = y
  }

  public init(x: Int32, y: Int32, height: Int32?, width: Int32?) {
    self.x = x
    self.y = y
    self.height = height
    self.width = width
  }

}

public final class Topic {

  public var id: String


  public init(id: String) {
    self.id = id
  }

}

public final class Image {

  public var url: String

  public var caption: String?

  public var credit: String?


  public init(url: String) {
    self.url = url
  }

  public init(url: String, caption: String?, credit: String?) {
    self.url = url
    self.caption = caption
    self.credit = credit
  }

}

public protocol Native {

  ///
  /// - Returns: Int32
  /// - Throws: 
  func nativeThriftPackageVersion() throws -> Int32

  ///
  /// - Parameters:
  ///   - adSlots: 
  /// - Throws: 
  func insertAdverts(adSlots: TList<AdSlot>) throws

  ///
  /// - Parameters:
  ///   - adSlots: 
  /// - Throws: 
  func updateAdverts(adSlots: TList<AdSlot>) throws

  ///
  /// - Throws: 
  func launchFrictionScreen() throws

  ///
  /// - Parameters:
  ///   - topic: 
  /// - Throws: 
  func follow(topic: Topic) throws

  ///
  /// - Parameters:
  ///   - topic: 
  /// - Throws: 
  func unfollow(topic: Topic) throws

  ///
  /// - Parameters:
  ///   - images: 
  ///   - selectedIndex: 
  /// - Throws: 
  func launchSlideshow(images: TList<Image>, selectedIndex: Int32) throws

  ///
  /// - Parameters:
  ///   - topic: 
  /// - Returns: Bool
  /// - Throws: 
  func isFollowing(topic: Topic) throws -> Bool

  ///
  /// - Returns: Bool
  /// - Throws: 
  func isPremiumUser() throws -> Bool

}

open class NativeClient : TClient /* , Native */ {

}

open class NativeProcessor /* Native */ {

  typealias ProcessorHandlerDictionary = [String: (Int32, TProtocol, TProtocol, Native) throws -> Void]

  public var service: Native

  public required init(service: Native) {
    self.service = service
  }

}


